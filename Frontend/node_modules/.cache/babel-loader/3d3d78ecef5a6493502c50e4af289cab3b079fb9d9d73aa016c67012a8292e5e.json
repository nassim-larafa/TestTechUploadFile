{"ast":null,"code":"var _jsxFileName = \"/Users/nassimlarafa/Downloads/TestTechUploadFile/Frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CHUNK_SIZE = 1024 * 1024; // 1 MB\n\nconst FileUpload = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [progress, setProgress] = useState(0);\n  const [uploadedFile, setUploadedFile] = useState(null);\n  const [error, setError] = useState(null);\n  const [lastUploadedChunk, setLastUploadedChunk] = useState(-1);\n\n  // Handle file selection\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n    setError(null); // Reset error when a new file is selected\n    setLastUploadedChunk(-1); // Reset last uploaded chunk when a new file is selected\n  };\n\n  // Upload a single chunk\n  const uploadChunk = async (chunk, chunkIndex, totalChunks) => {\n    const formData = new FormData();\n    formData.append(\"file\", chunk); // Append the file chunk\n    formData.append(\"chunkIndex\", chunkIndex); // Append the chunk index\n    formData.append(\"totalChunks\", totalChunks); // Append the total number of chunks\n    formData.append(\"fileName\", file.name); // Append the file name\n\n    try {\n      const response = await axios.post(\"http://localhost:8000/api/upload/\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\" // Set the correct Content-Type\n        }\n      });\n      setProgress((chunkIndex + 1) / totalChunks * 100); // Update progress\n      setLastUploadedChunk(chunkIndex); // Update the last uploaded chunk\n      return response.data; // Return the server response\n    } catch (error) {\n      console.error(\"Error uploading chunk:\", error);\n      throw error; // Rethrow the error to handle it in the main function\n    }\n  };\n\n  // Handle the full file upload process\n  const handleUpload = async () => {\n    if (!file) {\n      setError(\"Please select a file.\");\n      return;\n    }\n    const totalChunks = Math.ceil(file.size / CHUNK_SIZE); // Calculate totalChunks\n\n    try {\n      // Start uploading from the last uploaded chunk\n      for (let i = lastUploadedChunk + 1; i < totalChunks; i++) {\n        const chunk = file.slice(i * CHUNK_SIZE, (i + 1) * CHUNK_SIZE); // Split the file into chunks\n        const response = await uploadChunk(chunk, i, totalChunks); // Upload each chunk\n\n        // If this is the last chunk, set the uploaded file\n        if (i === totalChunks - 1 && response.success) {\n          setUploadedFile(file.name);\n        }\n      }\n    } catch (error) {\n      setError(\"An error occurred during upload. Please try again.\");\n      console.error(\"Error completing upload:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: styles.title,\n      children: \"File Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange,\n      style: styles.fileInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      style: styles.uploadButton,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), progress > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.progressContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"progress\", {\n        value: progress,\n        max: \"100\",\n        style: styles.progressBar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: styles.progressText,\n        children: [Math.round(progress), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: styles.errorText,\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }, this), uploadedFile && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.uploadedFileContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        style: styles.uploadedFileText,\n        children: [\"Uploaded File: \", uploadedFile]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), uploadedFile.endsWith(\".jpg\") || uploadedFile.endsWith(\".png\") ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `http://localhost:8000/media/${uploadedFile}`,\n        alt: \"Uploaded\",\n        style: styles.uploadedImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"a\", {\n        href: `http://localhost:8000/media/${uploadedFile}`,\n        download: true,\n        style: styles.downloadLink,\n        children: \"Download File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n\n// Styles for the component\n_s(FileUpload, \"URj2hnnMveL1UEooszhO9oZEcxg=\");\n_c = FileUpload;\nconst styles = {\n  container: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    height: \"100vh\",\n    fontFamily: \"Arial, sans-serif\",\n    backgroundColor: \"#f5f5f5\",\n    padding: \"20px\"\n  },\n  title: {\n    fontSize: \"2rem\",\n    marginBottom: \"20px\"\n  },\n  fileInput: {\n    marginBottom: \"20px\"\n  },\n  uploadButton: {\n    padding: \"10px 20px\",\n    fontSize: \"1rem\",\n    backgroundColor: \"#007bff\",\n    color: \"#fff\",\n    border: \"none\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\"\n  },\n  progressContainer: {\n    width: \"300px\",\n    marginTop: \"20px\"\n  },\n  progressBar: {\n    width: \"100%\"\n  },\n  progressText: {\n    display: \"block\",\n    textAlign: \"center\",\n    marginTop: \"10px\"\n  },\n  errorText: {\n    color: \"red\",\n    marginTop: \"20px\"\n  },\n  uploadedFileContainer: {\n    marginTop: \"20px\",\n    textAlign: \"center\"\n  },\n  uploadedFileText: {\n    fontSize: \"1.2rem\"\n  },\n  uploadedImage: {\n    maxWidth: \"10%\",\n    marginTop: \"10px\"\n  },\n  downloadLink: {\n    display: \"inline-block\",\n    marginTop: \"10px\",\n    color: \"#007bff\",\n    textDecoration: \"none\"\n  }\n};\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","CHUNK_SIZE","FileUpload","_s","file","setFile","progress","setProgress","uploadedFile","setUploadedFile","error","setError","lastUploadedChunk","setLastUploadedChunk","handleFileChange","e","target","files","uploadChunk","chunk","chunkIndex","totalChunks","formData","FormData","append","name","response","post","headers","data","console","handleUpload","Math","ceil","size","i","slice","success","style","styles","container","children","title","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","fileInput","onClick","uploadButton","progressContainer","value","max","progressBar","progressText","round","errorText","uploadedFileContainer","uploadedFileText","endsWith","src","alt","uploadedImage","href","download","downloadLink","_c","display","flexDirection","alignItems","justifyContent","height","fontFamily","backgroundColor","padding","fontSize","marginBottom","color","border","borderRadius","cursor","width","marginTop","textAlign","maxWidth","textDecoration","$RefreshReg$"],"sources":["/Users/nassimlarafa/Downloads/TestTechUploadFile/Frontend/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nconst CHUNK_SIZE = 1024 * 1024; // 1 MB\n\nconst FileUpload = () => {\n  const [file, setFile] = useState(null);\n  const [progress, setProgress] = useState(0);\n  const [uploadedFile, setUploadedFile] = useState(null);\n  const [error, setError] = useState(null);\n  const [lastUploadedChunk, setLastUploadedChunk] = useState(-1);\n\n  // Handle file selection\n  const handleFileChange = (e) => {\n    setFile(e.target.files[0]);\n    setError(null); // Reset error when a new file is selected\n    setLastUploadedChunk(-1); // Reset last uploaded chunk when a new file is selected\n  };\n\n  // Upload a single chunk\n  const uploadChunk = async (chunk, chunkIndex, totalChunks) => {\n    const formData = new FormData();\n    formData.append(\"file\", chunk); // Append the file chunk\n    formData.append(\"chunkIndex\", chunkIndex); // Append the chunk index\n    formData.append(\"totalChunks\", totalChunks); // Append the total number of chunks\n    formData.append(\"fileName\", file.name); // Append the file name\n\n    try {\n      const response = await axios.post(\"http://localhost:8000/api/upload/\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\", // Set the correct Content-Type\n        },\n      });\n      setProgress(((chunkIndex + 1) / totalChunks) * 100); // Update progress\n      setLastUploadedChunk(chunkIndex); // Update the last uploaded chunk\n      return response.data; // Return the server response\n    } catch (error) {\n      console.error(\"Error uploading chunk:\", error);\n      throw error; // Rethrow the error to handle it in the main function\n    }\n  };\n\n  // Handle the full file upload process\n  const handleUpload = async () => {\n    if (!file) {\n      setError(\"Please select a file.\");\n      return;\n    }\n\n    const totalChunks = Math.ceil(file.size / CHUNK_SIZE); // Calculate totalChunks\n\n    try {\n      // Start uploading from the last uploaded chunk\n      for (let i = lastUploadedChunk + 1; i < totalChunks; i++) {\n        const chunk = file.slice(i * CHUNK_SIZE, (i + 1) * CHUNK_SIZE); // Split the file into chunks\n        const response = await uploadChunk(chunk, i, totalChunks); // Upload each chunk\n\n        // If this is the last chunk, set the uploaded file\n        if (i === totalChunks - 1 && response.success) {\n          setUploadedFile(file.name);\n        }\n      }\n    } catch (error) {\n      setError(\"An error occurred during upload. Please try again.\");\n      console.error(\"Error completing upload:\", error);\n    }\n  };\n\n  return (\n    <div style={styles.container}>\n      <h1 style={styles.title}>File Upload</h1>\n      <input type=\"file\" onChange={handleFileChange} style={styles.fileInput} />\n      <button onClick={handleUpload} style={styles.uploadButton}>\n        Upload\n      </button>\n\n      {/* Progress Bar */}\n      {progress > 0 && (\n        <div style={styles.progressContainer}>\n          <progress value={progress} max=\"100\" style={styles.progressBar} />\n          <span style={styles.progressText}>{Math.round(progress)}%</span>\n        </div>\n      )}\n\n      {/* Error Message */}\n      {error && <p style={styles.errorText}>{error}</p>}\n\n      {/* Uploaded File Preview */}\n      {uploadedFile && (\n        <div style={styles.uploadedFileContainer}>\n          <p style={styles.uploadedFileText}>Uploaded File: {uploadedFile}</p>\n          {uploadedFile.endsWith(\".jpg\") || uploadedFile.endsWith(\".png\") ? (\n            <img\n              src={`http://localhost:8000/media/${uploadedFile}`}\n              alt=\"Uploaded\"\n              style={styles.uploadedImage}\n            />\n          ) : (\n            <a\n              href={`http://localhost:8000/media/${uploadedFile}`}\n              download\n              style={styles.downloadLink}\n            >\n              Download File\n            </a>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\n// Styles for the component\nconst styles = {\n  container: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    height: \"100vh\",\n    fontFamily: \"Arial, sans-serif\",\n    backgroundColor: \"#f5f5f5\",\n    padding: \"20px\",\n  },\n  title: {\n    fontSize: \"2rem\",\n    marginBottom: \"20px\",\n  },\n  fileInput: {\n    marginBottom: \"20px\",\n  },\n  uploadButton: {\n    padding: \"10px 20px\",\n    fontSize: \"1rem\",\n    backgroundColor: \"#007bff\",\n    color: \"#fff\",\n    border: \"none\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n  },\n  progressContainer: {\n    width: \"300px\",\n    marginTop: \"20px\",\n  },\n  progressBar: {\n    width: \"100%\",\n  },\n  progressText: {\n    display: \"block\",\n    textAlign: \"center\",\n    marginTop: \"10px\",\n  },\n  errorText: {\n    color: \"red\",\n    marginTop: \"20px\",\n  },\n  uploadedFileContainer: {\n    marginTop: \"20px\",\n    textAlign: \"center\",\n  },\n  uploadedFileText: {\n    fontSize: \"1.2rem\",\n  },\n  uploadedImage: {\n    maxWidth: \"10%\",\n    marginTop: \"10px\",\n  },\n  downloadLink: {\n    display: \"inline-block\",\n    marginTop: \"10px\",\n    color: \"#007bff\",\n    textDecoration: \"none\",\n  },\n};\n\nexport default FileUpload;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}